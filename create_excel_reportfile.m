function create_excel_reportfile(WorkDir)
rootmain=pwd;
cd(WorkDir);
% creating the report excel file for all electrods
if exist('electrod_report','dir')==7

    cd('./electrod_report');
    root=pwd;
    ne2=0;
    files_to_excel_tmp=dir([root '/*_report.mat']);
    for i=1:size(files_to_excel_tmp,1)
        ne=1;
        total_excel_matrix=[];
        tmp_data_excel=load([root '/' files_to_excel_tmp(i).name]);
        % check the data to see if all structure is fine.
        size_matrix=[size(tmp_data_excel.Report.geodesic_distance_inside_leed,2) ...
            size(tmp_data_excel.Report.spherical_distance_inside_leed,2) ...
            size(tmp_data_excel.Report.percentage_of_recording_leed,2) ...
            size(tmp_data_excel.Report.central_coordinate_recording_leed_native,1) ...
            size(tmp_data_excel.Report.central_coordinate_recording_leed_native_std,1) ...
            size(tmp_data_excel.Report.central_coordinate_recording_leed_subject_fslr,1) ...
            size(tmp_data_excel.Report.central_coordinate_recording_leed_template_falt_fslr,1) ...
            size(tmp_data_excel.Report.central_coordinate_recording_leed_template_fslr,1)];
        if size(setdiff(size_matrix,[]),2)>1
            disp(['The electrod ' tmp_data_excel.Report.electode_name ' has a strange structure! check it out'])
        else
            disp(['**** Adding electrod ' tmp_data_excel.Report.electode_name ' to excel file *****'])
            for j=1:size(tmp_data_excel.Report.spherical_distance_inside_leed,2)
                subj_name_exc(j,:)=tmp_data_excel.Report.subject_name ;
                if j<10
                    elect_name_exc(j,:)=[tmp_data_excel.Report.electode_name '_0' num2str(j)];
                else
                    elect_name_exc(j,:)=[tmp_data_excel.Report.electode_name '_' num2str(j)];
                end
                %                 ne=ne+1;
            end
            ne2=ne2+1;
            excel_matrix_tmp(ne2,:)={ subj_name_exc ...
                elect_name_exc ...
                tmp_data_excel.Report.geodesic_distance_inside_leed' ...
                tmp_data_excel.Report.spherical_distance_inside_leed' ...
                tmp_data_excel.Report.percentage_of_recording_leed' ...
                tmp_data_excel.Report.central_coordinate_recording_leed_native ...
                tmp_data_excel.Report.central_coordinate_recording_leed_subject_fslr ...
                tmp_data_excel.Report.central_coordinate_recording_leed_template_fslr  ...
                tmp_data_excel.Report.central_coordinate_recording_leed_template_falt_fslr };
            % creating cell structure for excel and write thrm inside the
            % file accoridingly
            
            
            
        end
        clear tmp_data_excel elect_name_exc subj_name_exc
    end
    
    for i=1:size(excel_matrix_tmp,2)
        temp_final{:,i}=[];
        for j=1:size(excel_matrix_tmp,1)
            temp_final{:,i}=[temp_final{:,i};excel_matrix_tmp{j,i}];
        end
        
    end
    % arranging an excel matrix
    csv_file_name='single_report_file.csv';
    dd1 = ['Subject name,Electrod name,distance dispersal geodesic of a leed' ...
        ',distance dispersal spherical of a leed,Recording Percentage' ...
        ',Recording in native space,Recording in subject`s fslr space' ...
        ',Recording in fslr template space,Recording in flat fslr space'];
    fid=fopen(csv_file_name,'w');
    fprintf(fid,[ dd1 '\n']);  % to create header file for paint file
    % writng CSV file line by line
    for l=1:size(temp_final{1},1)
        dd2=horzcat(temp_final{1}(l,:),',',temp_final{2}(l,:),',' ...
            ,num2str(round(temp_final{3}(l,:))), ','...
            ,num2str(round(temp_final{4}(l,:))),',' ...
            ,num2str(temp_final{5}(l,:)), ',' ...
            ,num2str(round(temp_final{6}(l,:))), ',' ...
            ,num2str(round(temp_final{7}(l,:))), ',' ...
            ,num2str(round(temp_final{8}(l,:))), ',' ...
            ,num2str(round(temp_final{9}(l,:))));
        fprintf(fid,[ dd2 '\n']);
        clear dd2
    end
    fclose(fid);
    % d = [{'Subject name'; temp_final{1}}
    %     {'Electrod name';temp_final{2}} ...
    %     {'distance dispersal geodesic of a leed ';temp_final{3}} ...
    %     {'distance dispersal spherical of a leed';temp_final{4}} ...
    %     {'Recording Percentage' ;temp_final{5} } ...
    %     {'Recording in native space';temp_final{6}}...
    %     {'Recording in subject`s fslr space';temp_final{7}}...
    %     {'Recording in fslr template space';temp_final{8}}...
    %     {'Recording in flat fslr space'; temp_final{9}}];
    %csvwrite('ExceleData', d);
end
cd(rootmain);
%================================================================
% creating one node out of merged file to create final excel file
